# Generated by Django 4.2.17 on 2025-01-01 09:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("main_app", "0002_alter_ecoactivity_options_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="ecoactivity",
            name="created_at",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name="ecoactivity",
            name="impact_level",
            field=models.CharField(
                choices=[
                    ("LOW", "Low Impact"),
                    ("MEDIUM", "Medium Impact"),
                    ("HIGH", "High Impact"),
                ],
                default="MEDIUM",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="ecoactivity",
            name="location",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="ecoactivity",
            name="notes",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="ecoactivity",
            name="tags",
            field=models.CharField(
                blank=True, help_text="Comma-separated tags", max_length=255
            ),
        ),
        migrations.AddField(
            model_name="ecoactivity",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="ecoactivity",
            name="verified_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="verified_activities",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="sustainabilitygoal",
            name="assigned_to",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_goals",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="sustainabilitygoal",
            name="category",
            field=models.CharField(
                choices=[
                    ("ENERGY", "Energy Consumption"),
                    ("WATER", "Water Usage"),
                    ("WASTE", "Waste Management"),
                    ("TRANSPORT", "Transportation"),
                    ("RECYCLING", "Recycling"),
                ],
                default="ENERGY",
                help_text="Category this goal belongs to",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="sustainabilitygoal",
            name="last_reminder_sent",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="sustainabilitygoal",
            name="notes",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="sustainabilitygoal",
            name="priority",
            field=models.CharField(
                choices=[
                    ("LOW", "Low Priority"),
                    ("MEDIUM", "Medium Priority"),
                    ("HIGH", "High Priority"),
                    ("URGENT", "Urgent"),
                ],
                default="MEDIUM",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="sustainabilitygoal",
            name="reminder_frequency",
            field=models.IntegerField(
                default=7, help_text="Reminder frequency in days"
            ),
        ),
        migrations.AlterField(
            model_name="ecoactivity",
            name="value",
            field=models.FloatField(
                validators=[django.core.validators.MinValueValidator(0.0)]
            ),
        ),
        migrations.AlterField(
            model_name="sustainabilitygoal",
            name="created_at",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="sustainabilitygoal",
            name="current_value",
            field=models.FloatField(
                default=0, validators=[django.core.validators.MinValueValidator(0.0)]
            ),
        ),
        migrations.AlterField(
            model_name="sustainabilitygoal",
            name="status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending"),
                    ("IN_PROGRESS", "In Progress"),
                    ("COMPLETED", "Completed"),
                    ("CANCELLED", "Cancelled"),
                    ("OVERDUE", "Overdue"),
                ],
                default="PENDING",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="sustainabilitygoal",
            name="target_value",
            field=models.FloatField(
                validators=[django.core.validators.MinValueValidator(0.0)]
            ),
        ),
        migrations.AddIndex(
            model_name="ecoactivity",
            index=models.Index(
                fields=["user", "category", "date"],
                name="main_app_ec_user_id_51ca4b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="ecoactivity",
            index=models.Index(
                fields=["verified", "impact_level"],
                name="main_app_ec_verifie_a2a9eb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="sustainabilitygoal",
            index=models.Index(
                fields=["user", "status", "deadline"],
                name="main_app_su_user_id_b8e08a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="sustainabilitygoal",
            index=models.Index(
                fields=["priority", "category"], name="main_app_su_priorit_83f2ba_idx"
            ),
        ),
    ]
